import { APIActionRowComponent, APIMessageActionRowComponent, ActionRowBuilder, AutocompleteInteraction, ButtonBuilder, ButtonStyle, CommandInteraction, CommandInteractionOptionResolver, EmbedBuilder, PermissionFlagsBits, SlashCommandBuilder, TextChannel } from "discord.js";
import { createColorRole, deleteColorRole, getColorRoles } from "../../funcs/colorRole";

export const data = new SlashCommandBuilder()
    .setName("color")
    .setDescription("‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏®‡∏™‡∏µ")
    .addSubcommand(subcommand =>
        subcommand
        .setName("add")
            .setDescription("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà")
            .addStringOption(option =>
                option
                    .setName("name")
                    .setDescription("üßæ ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏¢‡∏®‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á")
                    .setRequired(true)
                )
            .addRoleOption(option =>
                option
                    .setName("role")
                    .setDescription("üõ°Ô∏è ‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ô‡∏µ‡πâ")
                    .setRequired(true)
            )
        )
    .addSubcommand(subcommand =>
        subcommand
            .setName("remove")
            .setDescription("‚ûñ ‡∏•‡∏ö‡∏¢‡∏®‡∏™‡∏µ")
            .addStringOption(option =>
                option
                .setName("name")
                .setDescription("üßæ ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏¢‡∏®‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö")
                .setRequired(true)
                .setAutocomplete(true)
            )
        )
    .addSubcommand(subcommand =>
        subcommand
            .setName("sendembed")
            .setDescription("üì§ ‡∏™‡πà‡∏á embed + ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏®‡∏™‡∏µ")
            .addChannelOption(option =>
                option
                .setName("channel")
                .setDescription("üì° ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á embed ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°")
                .setRequired(true)
            )
        )
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator);
export async function autocomplete(interaction: AutocompleteInteraction) {
    if (!interaction.guild) { return null; }
    const subcommand = interaction.options.getSubcommand();
    const focusedValue = interaction.options.getFocused();
    if (subcommand === "remove") {
        const colorRoles = await getColorRoles(interaction.guild);
        const options = colorRoles.map(role => {
            return {
                name: role.color,
                value: role.color
            }
        });
        return interaction.respond(options.filter(option => option.name.includes(focusedValue)).slice(0, 25));       
    }
}
export async function execute(interaction: CommandInteraction) {
    const subcommand = (interaction.options as CommandInteractionOptionResolver).getSubcommand();
    switch (subcommand) {
        case "add": {
            const name = (interaction.options as CommandInteractionOptionResolver).getString("name");
            const role = (interaction.options as CommandInteractionOptionResolver).getRole("role");
            if (!name || !role) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"); }
            const guild = interaction.guild;
            if (!guild) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"); }
            try {
                await createColorRole(guild, name, role.id);
            } catch (error) {
                console.error(error);
                return interaction.reply("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏®‡∏™‡∏µ");
            }
            return interaction.reply({ content: `üéâ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡∏®${role}‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏µ${name}‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô`, ephemeral: true });
        }
        case "remove": {
            const name = (interaction.options as CommandInteractionOptionResolver).getString("name");
            if (!name) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á."); }
            const guild = interaction.guild;
            if (!guild) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"); }
            try {
                await deleteColorRole(guild, name);
            } catch (error) {
                console.error(error);
                return interaction.reply("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏•‡∏ö‡∏¢‡∏®‡∏™‡∏µ.");
            }
            return interaction.reply({ content: `üéâ ‡∏•‡∏ö‡∏¢‡∏®‡∏™‡∏µ${name}‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô`, ephemeral: true });
        }
        case "sendembed": {
            const channel = (interaction.options as CommandInteractionOptionResolver).getChannel("channel");
            if (!channel) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"); }
            if (!interaction.guild) { return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"); }
            const msg = "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏ä‡∏∑‡πà‡∏≠";
            const btn = new ButtonBuilder()
                .setCustomId("show_color_role_selector")
                .setLabel("üé® ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ")
                .setStyle(ButtonStyle.Primary);
            const row = new ActionRowBuilder()
                .addComponents(btn);
            await (channel as TextChannel).send({ content: msg, components: [row as unknown as APIActionRowComponent<APIMessageActionRowComponent>] });
            return interaction.reply("üéâ ‡∏™‡πà‡∏á embed ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô");
        }
        default:
            return interaction.reply("‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    }
}